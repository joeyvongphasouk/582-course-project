#-----------------------------------------------------------
# Vivado v2024.2 (64-bit)
# SW Build 5239630 on Fri Nov 08 22:34:34 MST 2024
# IP Build 5239520 on Sun Nov 10 16:12:51 MST 2024
# SharedData Build 5239561 on Fri Nov 08 14:39:27 MST 2024
# Start of session at: Sun Apr 27 10:46:08 2025
# Process ID         : 50682
# Current directory  : /home/hkchu/xillybus/verilog/vivado/xillydemo.runs/impl_1
# Command line       : vivado -mode batch -source xillydemo.tcl
# Log file           : /home/hkchu/xillybus/verilog/vivado/xillydemo.runs/impl_1/vivado.log
# Journal file       : /home/hkchu/xillybus/verilog/vivado/xillydemo.runs/impl_1/vivado.jou
# Running On         : pikespeak
# Platform           : Ubuntu
# Operating System   : Ubuntu 22.04.5 LTS
# Processor Detail   : 11th Gen Intel(R) Core(TM) i9-11900K @ 3.50GHz
# CPU Frequency      : 4700.000 MHz
# CPU Physical cores : 8
# CPU Logical cores  : 16
# Host memory        : 67185 MB
# Swap memory        : 2147 MB
# Total Virtual      : 69332 MB
# Available Virtual  : 65360 MB
#-----------------------------------------------------------
source xillydemo.tcl
# namespace eval ::optrace {
#   variable script "/home/hkchu/xillybus/verilog/vivado/xillydemo.runs/impl_1/xillydemo.tcl"
#   variable category "vivado_impl"
# }
# if {![info exists ::dispatch::connected]} {
#   namespace eval ::dispatch {
#     variable connected false
#     if {[llength [array get env XILINX_CD_CONNECT_ID]] > 0} {
#       set result "true"
#       if {[catch {
#         if {[lsearch -exact [package names] DispatchTcl] < 0} {
#           set result [load librdi_cd_clienttcl[info sharedlibextension]] 
#         }
#         if {$result eq "false"} {
#           puts "WARNING: Could not load dispatch client library"
#         }
#         set connect_id [ ::dispatch::init_client -mode EXISTING_SERVER ]
#         if { $connect_id eq "" } {
#           puts "WARNING: Could not initialize dispatch client"
#         } else {
#           puts "INFO: Dispatch client connection id - $connect_id"
#           set connected true
#         }
#       } catch_res]} {
#         puts "WARNING: failed to connect to dispatch server - $catch_res"
#       }
#     }
#   }
# }
# if {$::dispatch::connected} {
#   # Remove the dummy proc if it exists.
#   if { [expr {[llength [info procs ::OPTRACE]] > 0}] } {
#     rename ::OPTRACE ""
#   }
#   proc ::OPTRACE { task action {tags {} } } {
#     ::vitis_log::op_trace "$task" $action -tags $tags -script $::optrace::script -category $::optrace::category
#   }
#   # dispatch is generic. We specifically want to attach logging.
#   ::vitis_log::connect_client
# } else {
#   # Add dummy proc if it doesn't exist.
#   if { [expr {[llength [info procs ::OPTRACE]] == 0}] } {
#     proc ::OPTRACE {{arg1 \"\" } {arg2 \"\"} {arg3 \"\" } {arg4 \"\"} {arg5 \"\" } {arg6 \"\"}} {
#         # Do nothing
#     }
#   }
# }
# proc start_step { step } {
#   set stopFile ".stop.rst"
#   if {[file isfile .stop.rst]} {
#     puts ""
#     puts "*** Halting run - EA reset detected ***"
#     puts ""
#     puts ""
#     return -code error
#   }
#   set beginFile ".$step.begin.rst"
#   set platform "$::tcl_platform(platform)"
#   set user "$::tcl_platform(user)"
#   set pid [pid]
#   set host ""
#   if { [string equal $platform unix] } {
#     if { [info exist ::env(HOSTNAME)] } {
#       set host $::env(HOSTNAME)
#     } elseif { [info exist ::env(HOST)] } {
#       set host $::env(HOST)
#     }
#   } else {
#     if { [info exist ::env(COMPUTERNAME)] } {
#       set host $::env(COMPUTERNAME)
#     }
#   }
#   set ch [open $beginFile w]
#   puts $ch "<?xml version=\"1.0\"?>"
#   puts $ch "<ProcessHandle Version=\"1\" Minor=\"0\">"
#   puts $ch "    <Process Command=\".planAhead.\" Owner=\"$user\" Host=\"$host\" Pid=\"$pid\">"
#   puts $ch "    </Process>"
#   puts $ch "</ProcessHandle>"
#   close $ch
# }
# proc end_step { step } {
#   set endFile ".$step.end.rst"
#   set ch [open $endFile w]
#   close $ch
# }
# proc step_failed { step } {
#   set endFile ".$step.error.rst"
#   set ch [open $endFile w]
#   close $ch
# OPTRACE "impl_1" END { }
# }
# set_msg_config  -id {Coretcl 2-1280}  -string {{pcie}}  -new_severity {INFO} 
# OPTRACE "impl_1" START { ROLLUP_1 }
# OPTRACE "Phase: Init Design" START { ROLLUP_AUTO }
# start_step init_design
# set ACTIVE_STEP init_design
Command: link_design -top xillydemo -part xcu50-fsvh2104-2-e
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xcu50-fsvh2104-2-e
1 Infos, 0 Warnings, 0 Critical Warnings and 1 Errors encountered.
link_design failed
# set rc [catch {
#   create_msg_db init_design.pb
#   set_param chipscope.maxJobs 4
#   set_param runs.launchOptions { -jobs 8  }
# OPTRACE "create in-memory project" START { }
#   create_project -in_memory -part xcu50-fsvh2104-2-e
#   set_property design_mode GateLvl [current_fileset]
#   set_param project.singleFileAddWarning.threshold 0
# OPTRACE "create in-memory project" END { }
# OPTRACE "set parameters" START { }
#   set_property webtalk.parent_dir /home/hkchu/xillybus/verilog/vivado/xillydemo.cache/wt [current_project]
#   set_property parent.project_path /home/hkchu/xillybus/verilog/vivado/xillydemo.xpr [current_project]
#   set_property ip_output_repo /home/hkchu/xillybus/verilog/vivado/xillydemo.cache/ip [current_project]
#   set_property ip_cache_permissions {read write} [current_project]
#   set_property XPM_LIBRARIES {XPM_CDC XPM_FIFO XPM_MEMORY} [current_project]
# OPTRACE "set parameters" END { }
# OPTRACE "add files" START { }
#   add_files -quiet /home/hkchu/xillybus/verilog/vivado/xillydemo.runs/synth_1/xillydemo.dcp
#   read_ip -quiet /home/hkchu/xillybus/vivado-essentials/fifo_32x512/fifo_32x512.xci
#   read_ip -quiet /home/hkchu/xillybus/vivado-essentials/fifo_8x2048/fifo_8x2048.xci
#   read_ip -quiet /home/hkchu/xillybus/vivado-essentials/pcie4c_uscale_plus_0/pcie4c_uscale_plus_0.xci
#   read_edif /home/hkchu/xillybus/core/xillybus_core.edf
# OPTRACE "read constraints: implementation" START { }
#   read_xdc /home/hkchu/xillybus/vivado-essentials/xillydemo.xdc
# OPTRACE "read constraints: implementation" END { }
# OPTRACE "read constraints: implementation_pre" START { }
# OPTRACE "read constraints: implementation_pre" END { }
# OPTRACE "add files" END { }
# OPTRACE "link_design" START { }
#   link_design -top xillydemo -part xcu50-fsvh2104-2-e 
# OPTRACE "link_design" END { }
# OPTRACE "gray box cells" START { }
# OPTRACE "gray box cells" END { }
# OPTRACE "init_design_reports" START { REPORT }
# OPTRACE "init_design_reports" END { }
# OPTRACE "init_design_write_hwdef" START { }
# OPTRACE "init_design_write_hwdef" END { }
#   close_msg_db -file init_design.pb
# } RESULT]
# if {$rc} {
#   step_failed init_design
#   return -code error $RESULT
# } else {
#   end_step init_design
#   unset ACTIVE_STEP 
# }
ERROR: [Project 1-68] No files found to match top module 'xillydemo'
Resolution: Please verify your EDIF file is named after its top module.  For instance, if the top module is called 'viterbi', name the file 'viterbi.edf'. File naming is case sensitive on Linux.
INFO: [Common 17-206] Exiting Vivado at Sun Apr 27 10:46:19 2025...
